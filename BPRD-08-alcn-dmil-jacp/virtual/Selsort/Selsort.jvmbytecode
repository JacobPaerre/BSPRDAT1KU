  public static void SelectionSort(int[]);
    descriptor: ([I)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=1
         0: iconst_0                    // Push 0 onto the stack
         1: istore_1                    // Store the 0 into local variable 1 (i = 0)
         2: iload_1                     // Load the value of local variable 1 (i)
         3: aload_0                     // Load the argument array (arr)
         4: arraylength                 // Get the length of the array
         5: if_icmpge     57            // If i >= arr.length, jump to 57 (return)
         8: iload_1                     // Load the value of local variable 1 (i)
         9: istore_2                    // Store the value of i into local variable 2 (least = i)
        10: iload_1                     // Load the value of local variable 1 (i)
        11: iconst_1                    // Push 1 onto the stack
        12: iadd                        // i + 1
        13: istore_3                    // Store the result into local variable 3 (j = i + 1)
        14: iload_3                     // Load the value of local variable 3 (j)
        15: aload_0                     // Load the argument array (arr)
        16: arraylength                 // Get the length of the array
        17: if_icmpge     37            // If j >= arr.length, jump to 37 (exit inner loop)
        20: aload_0                     // Load the argument array (arr)
        21: iload_3                     // Load the value of local variable 3 (j)
        22: iaload                      // Load arr[j]
        23: aload_0                     // Load the argument array (arr)
        24: iload_2                     // Load the value of local variable 2 (least)
        25: iaload                      // Load arr[least]
        26: if_icmpge     31            // If arr[j] >= arr[least], jump to 31 (go to swap)
        29: iload_3                     // Load the value of local variable 3 (j)
        30: istore_2                    // Store the value of j into local variable 2 (least = j)
        31: iinc          3, 1          // Increment variable 3 by 1 (j++)
        34: goto          14            // Go to the start of the inner loop
        37: aload_0                     // Load the argument array (arr)
        38: iload_1                     // Load the value of local variable 1 (i)
        39: iaload                      // Load arr[i]
        40: istore_3                    // Store the value into local variable 3 (tmp = arr[i])
        41: aload_0                     // Load the argument array (arr)
        42: iload_1                     // Load the value of local variable 1 (i)
        43: aload_0                     // Load the argument array (arr)
        44: iload_2                     // Load the value of local variable 2 (least)
        45: iaload                      // Load arr[least]
        46: iastore                     // Store the value into arr[i]
        47: aload_0                     // Load the argument array (arr)
        48: iload_2                     // Load the value of local variable 2 (least)
        49: iload_3                     // Load the value of local variable 3 (tmp)
        50: iastore                     // Store the value into arr[least]
        51: iinc          1, 1          // Increment variable 1 by 1 (i++)
        54: goto          2             // Go to the start of the outer loop
        57: return                      // finito
      LineNumberTable:
        line 21: 0
        line 22: 8
        line 23: 10
        line 24: 20
        line 25: 29
        line 23: 31
        line 26: 37
        line 21: 51
        line 28: 57
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 253 /* append */
          offset_delta = 11
          locals = [ int, int ]
        frame_type = 16 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
        frame_type = 249 /* chop */
          offset_delta = 19